{"version":3,"sources":["js/cesar13.js","js/app.js"],"names":["cesar13","text","alphabet","alphabetUpperCase","toUpperCase","movementNumber","isNaN","console","log","outputText","map","el","test","index","indexOf","movementIndex","length","newIndex","join","submitBtn","document","querySelector","inputTxt","output","addEventListener","e","preventDefault","innerHTML","value"],"mappings":";;ACAA;;;;AAEA,IAAMmB,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,sBAAvB,CAAlB;AACA,IAAMC,QAAQ,GAAGF,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAAjB;AACA,IAAME,MAAM,GAAGH,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf;AAGAF,SAAS,CAACK,gBAAV,CAA2B,OAA3B,EAAoC,UAAAC,CAAC,EAAI;AACrCA,EAAAA,CAAC,CAACC,cAAF;AACAH,EAAAA,MAAM,CAACI,SAAP,GAAmB,oBAAQL,QAAQ,CAACM,KAAjB,CAAnB;AACH,CAHD;;;;;;;;;ADPA,SAAS5B,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,MAAMC,QAAQ,GAAG,4BAAjB;AACA,MAAMC,iBAAiB,GAAGD,QAAQ,CAACE,WAAT,EAA1B;AACA,MAAIC,cAAc,GAAG,EAArB;AAGA,MAAI,CAACC,KAAK,CAACL,IAAD,CAAV,EAAkB,OAAO,yDAAP;AAElBM,EAAAA,OAAO,CAACC,GAAR,SAAmBP,IAAnB;AAEAA,EAAAA,IAAI,sBAAOA,IAAP,CAAJ;AAEA,MAAIQ,UAAU,GAAG,EAAjB;AAEAA,EAAAA,UAAU,GAAGR,IAAI,CAACS,GAAL,CAAS,UAAAC,EAAE,EAAI;AAExB,QAAIA,EAAE,KAAK,GAAP,IAAc,KAAKC,IAAL,CAAUD,EAAV,CAAd,IAA+B,05DAASC,IAAT,CAAcD,EAAd,CAAnC,EAAsD,OAAOA,EAAP;;AAEtD,QAAI,QAAQC,IAAR,CAAaD,EAAb,CAAJ,EAAsB;AAClB,UAAME,KAAK,GAAGV,iBAAiB,CAACW,OAAlB,CAA0BH,EAA1B,CAAd;AACA,UAAMI,aAAa,GAAG,CAACF,KAAK,GAAGR,cAAT,IAA2BH,QAAQ,CAACc,MAA1D;AACA,aAAOb,iBAAiB,CAACY,aAAD,CAAxB;AACH,KAJD,MAIO;AACH,UAAMF,MAAK,GAAGX,QAAQ,CAACY,OAAT,CAAiBH,EAAjB,CAAd;;AACA,UAAMM,QAAQ,GAAG,CAACJ,MAAK,GAAGR,cAAT,IAA2BH,QAAQ,CAACc,MAArD;AACA,aAAOd,QAAQ,CAACe,QAAD,CAAf;AACH;AAGJ,GAfY,CAAb;AAgBA,SAAOR,UAAU,CAACS,IAAX,CAAgB,EAAhB,CAAP;AACH;;eAIclB","file":"app.c3f9f951.js","sourceRoot":"..","sourcesContent":["function cesar13(text) {\r\n    const alphabet = 'abcdefghijklmnopqrstuvwxyz';\r\n    const alphabetUpperCase = alphabet.toUpperCase();\r\n    let movementNumber = 13;\r\n\r\n\r\n    if (!isNaN(text)) return \"The phrase must be text and contain at least one letter\";\r\n\r\n    console.log(typeof text)\r\n\r\n    text = [...text];\r\n\r\n    let outputText = [];\r\n\r\n    outputText = text.map(el => {\r\n\r\n        if (el === \" \" || /\\d/.test(el) || /\\p{P}/u.test(el)) return el;\r\n\r\n        if (/[A-Z]/.test(el)) {\r\n            const index = alphabetUpperCase.indexOf(el);\r\n            const movementIndex = (index + movementNumber) % alphabet.length;\r\n            return alphabetUpperCase[movementIndex];\r\n        } else {\r\n            const index = alphabet.indexOf(el);\r\n            const newIndex = (index + movementNumber) % alphabet.length;\r\n            return alphabet[newIndex]\r\n        }\r\n\r\n\r\n    })\r\n    return outputText.join(\"\");\r\n}\r\n\r\n\r\n\r\nexport default cesar13;","import cesar13 from './cesar13';\r\n\r\nconst submitBtn = document.querySelector('.mainPassword-submit');\r\nconst inputTxt = document.querySelector('.mainPassword-input');\r\nconst output = document.querySelector('.output')\r\n\r\n\r\nsubmitBtn.addEventListener('click', e => {\r\n    e.preventDefault();\r\n    output.innerHTML = cesar13(inputTxt.value);\r\n})\r\n\r\n\r\n\r\n\r\n"]}